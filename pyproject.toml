[project]
name = "nomad-distribution"
description = "nomad distribution template"
version = "0.1"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
dependencies = [
    "nomad-lab[parsing, infrastructure]",
    "nomad-parser-plugins-camels-files",
]

[tool.uv.workspace]
members = ["packages/nomad-parser-plugins-camels-files", "packages/nomad-FAIR"]

[tool.uv.sources]
nomad-lab = { workspace = true }
nomad-parser-plugins-camels-files = { workspace = true }

# [project.entry-points.'nomad.plugin']
# myapp = "nomad_parser_plugins_camels_files.apps:myapp"

[tool.uv]
extra-index-url = [
    "https://gitlab.mpcdf.mpg.de/api/v4/projects/2187/packages/pypi/simple",
]
dev-dependencies = [
    "nomad-lab[parsing, infrastructure, dev]>=1.3.4",
    "poethepoet>=0.29.0",
]
constraint-dependencies = ["hyperspy>=1.7.6"]

[tool.poe.tasks]
submodule = "git submodule update --init --recursive"
start = "nomad admin run appworker"
setup = ["submodule", "gui-env", "gui-setup"]
lint = ["ruff-lint", "ruff-format"]

[tool.poe.tasks.gui-env]
cmd = "python -W ignore -m nomad.cli dev gui-env"
capture_stdout = "packages/nomad-FAIR/gui/.env.development"

[tool.poe.tasks.docs]
cmd = "mkdocs serve"
cwd = "packages/nomad-FAIR"

[tool.poe.tasks.ruff-lint]
cmd = "ruff check ."

[tool.poe.tasks.ruff-format]
cmd = "ruff format . --check"

[tool.poe.tasks.gui]
cmd = "yarn run"
cwd = "packages/nomad-FAIR/gui"

[tool.poe.tasks.gui-setup]
cmd = "yarn"
cwd = "packages/nomad-FAIR/gui"

[tool.poe.tasks.gen-gui-test-env]
cmd = "python -W ignore -m nomad.cli dev gui-config"
capture_stdout = "packages/nomad-FAIR/gui/tests/env.js"
env = { NOMAD_CONFIG = "packages/nomad-FAIR/gui/tests/nomad.yaml" }

[tool.poe.tasks.gen-gui-test-artifacts]
cmd = "python -W ignore -m nomad.cli dev gui-artifacts"
capture_stdout = "packages/nomad-FAIR/gui/tests/artifacts.js"
env = { NOMAD_CONFIG = "packages/nomad-FAIR/gui/tests/nomad.yaml" }
deps = ["gen-gui-test-env"]

[tool.poe.tasks.gen-nomad-lock]
cmd = "uv pip compile -U --universal -p 3.11 --extra parsing --extra infrastructure --extra dev --annotation-style=line pyproject.toml requirements.txt"
capture_stdout = "packages/nomad-FAIR/requirements-dev.txt"
cwd = "packages/nomad-FAIR"
deps = ["gen-nomad-lock-without-dev"]

[tool.poe.tasks.gen-nomad-lock-without-dev]
cmd = "uv pip compile -U --universal -p 3.11 --extra parsing --extra infrastructure --annotation-style=line pyproject.toml"
cwd = "packages/nomad-FAIR"
capture_stdout = "packages/nomad-FAIR/requirements.txt"
